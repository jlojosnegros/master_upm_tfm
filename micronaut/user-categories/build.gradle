plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "application"
    id "java"
    id "net.ltgt.apt-eclipse" version "0.21"
    id "net.ltgt.apt-idea" version "0.21"
//    id "io.freefair.lombok" version "3.5.1"
}



version "0.1"
group "org.jlom.master_upm.tfm.micronaut.user_categories"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.1.1'
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor 'org.projectlombok:lombok:1.18.8'

    compileOnly 'org.projectlombok:lombok:1.18.8'
    compile "io.micronaut:micronaut-management"
    compile "io.opentracing.brave:brave-opentracing"
    compile "io.micronaut:micronaut-tracing"
    //compile "io.micronaut:micronaut-security-jwt"
    //compile "io.micronaut:micronaut-discovery-client"
    compile "javax.annotation:javax.annotation-api"
    compile "io.micronaut.configuration:micronaut-rabbitmq"
    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut.configuration:micronaut-micrometer-core"
    compile "io.micronaut.configuration:micronaut-micrometer-registry-prometheus"
    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-runtime"
    compile "io.micronaut.configuration:micronaut-redis-lettuce"
    compile "io.micronaut:micronaut-http-server-netty"
    runtime "io.zipkin.brave:brave-instrumentation-http"
    runtime "io.zipkin.reporter2:zipkin-reporter"
    runtime "ch.qos.logback:logback-classic:1.2.3"


    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testAnnotationProcessor "io.micronaut:micronaut-validation"
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.8'


    testCompileOnly 'org.projectlombok:lombok:1.18.8'
    testCompile "org.junit.jupiter:junit-jupiter-api"
    testCompile "io.micronaut.test:micronaut-test-junit5"
    testRuntime "org.junit.jupiter:junit-jupiter-engine"
    // https://mvnrepository.com/artifact/com.github.kstyrc/embedded-redis
    testCompile group: 'com.github.kstyrc', name: 'embedded-redis', version: '0.6'
    // https://mvnrepository.com/artifact/org.assertj/assertj-core
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.12.2'
    // https://mvnrepository.com/artifact/org.hamcrest/hamcrest-library
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '2.1'
    // https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.27.0'

    testCompile "com.github.tomakehurst:wiremock-jre8:2.23.2"
    testCompile "org.testcontainers:testcontainers:1.11.2"

}

test.classpath += configurations.developmentOnly

mainClassName = "org.jlom.master_upm.tfm.micronaut.stream_control.UserCategoriesApplication"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}
